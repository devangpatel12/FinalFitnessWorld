@model FinalFitnessWorld.Models.Reservation

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Create</h2>
<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Reservation</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @*
            <div class="form-group">
                @Html.LabelFor(model => model.Customer, "Customer", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("Customer", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Customer, "", new { @class = "text-danger" })
                </div>
            </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Branch, "Branch", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Branch", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Trainer, "Trainer", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("Trainer", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Trainer, "", new { @class = "text-danger" })
            </div>
        </div>
    *@

    <div class="form-group">
        @Html.LabelFor(model => model.Branch, "Branch", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Branch, ViewBag.Branch as SelectList, "--Select Branch--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Trainer, "Trainer", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Trainer, ViewBag.Trainer as SelectList, "--Select Trainer--", htmlAttributes: new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Trainer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="input-group">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                <span class=" input-group-addon">
                    <span class=" glyphicon glyphicon-calendar open-datetimepicker"></span>
                </span>
            </div>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Time, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
        </div>
    </div>
    @*
        <div class="form-group">
            @Html.LabelFor(model => model.ReservationStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ReservationStatus, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ReservationStatus, "", new { @class = "text-danger" })
            </div>
        </div>
    *@
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/jquery-ui-1.12.1.js")

    <script>
        $(document).ready(function () {

            $('#Branch').change(function () {
                $.get("/Reservations/GetTrainerList", { Branch: $('#Branch').val() }, function (data) {
                    $('#Trainer').empty();
                    $.each(data, function (index, row) {
                        $('#Trainer').append("<option value='" + row.Id + "'>" + row.Name + "</option>")
                    });
                });
            })

            $("#Date").datepicker({
                dateFormat: 'dd-MM-yy',
                minDate: 1,
                maxDate: 30,
                allowInputToggle: true
            });

            $('.open-datetimepicker').click(function (event) {
                event.preventDefault();
                $('#Date').focus();
            });

            /*
            jQuery.validator.methods.date = function (value, element) {
                var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
                if (isChrome) {
                    var d = new Date();
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(d.toLocaleDateString(value)));
                } else {
                    return this.optional(element) || !/Invalid|NaN/.test(new Date(value));
                }
            };
            */
        });


    </script>
}
